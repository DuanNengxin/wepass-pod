syntax = "proto3";

package pod;

option go_package = "./proto;pod";

service Pod {
  rpc AddPod(PodInfo) returns (Response) {}
  rpc DeletePod(PodID) returns (Response) {}
  rpc FindPodByID(PodID) returns (PodInfo) {}
  rpc UpdatePod(PodInfo) returns (Response) {}
  rpc FindPodAll(FindAll) returns (PodInfos) {}
}

message FindAll {

}
message PodInfos {
  repeated PodInfo pod_infos = 1;
}

message PodInfo {
  int64 id = 1;
  string pod_namespace = 2;
  string pod_name = 3;
  string pod_team_id= 4;
  float pod_cpu_max = 5;
  float pod_cpu_min = 6;
  int32 pod_replicas = 7;
  float pod_memory_max = 8;
  float pod_memory_min = 9;
  string pod_pull_policy = 10;
  string pod_restart = 11;
  string pod_type = 12;
  string pod_image = 13;
  repeated PodPort pod_port = 14;
  repeated PodEnv pod_env = 15;
}

message PodPort {
  int64 id = 1;
  int64 pod_id = 2;
  int32 container_port = 3;
  string protocol = 4;
}

message PodEnv {
  int64 id = 1;
  int64 pod_id = 2;
  string env_key = 3;
  string env_value = 4;
}

message PodID {
  int64 id = 1;
}

message Response {
  string msg = 1;
}